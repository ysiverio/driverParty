rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Colecci贸n de viajes
    match /trips/{tripId} {
      // Permitir lectura a clientId y driverId del viaje
      allow read: if request.auth != null && 
        (resource.data.clientId == request.auth.uid || 
         resource.data.driverId == request.auth.uid);
      
      // Permitir escritura al clientId o driverId
      allow write: if request.auth != null && 
        (resource.data.clientId == request.auth.uid || 
         resource.data.driverId == request.auth.uid);
      
      // Subcolecci贸n de presencia del conductor
      match /presence/driver {
        // Solo el driverId puede escribir su presencia
        allow write: if request.auth != null && 
          get(/databases/$(database)/documents/trips/$(tripId)).data.driverId == request.auth.uid;
        
        // Permitir lectura a clientId y driverId
        allow read: if request.auth != null && 
          (get(/databases/$(database)/documents/trips/$(tripId)).data.clientId == request.auth.uid || 
           get(/databases/$(database)/documents/trips/$(tripId)).data.driverId == request.auth.uid);
      }
    }
    
    // Colecci贸n de usuarios (opcional)
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Colecci贸n de conductores (opcional)
    match /drivers/{driverId} {
      allow read, write: if request.auth != null && request.auth.uid == driverId;
    }
  }
}
